{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-cookie-service\";\nexport class StudentserviceService {\n  constructor(httpClient, cookie) {\n    this.httpClient = httpClient;\n    this.cookie = cookie;\n    this.isUserLogin = new BehaviorSubject(true);\n    this.showSideMenu = new BehaviorSubject(false);\n    this.baseurl = 'http://localhost:8080/student/';\n  }\n  // create student\n  addStudent(student) {\n    return this.httpClient.post(`${this.baseurl}` + 'create', student);\n  }\n  // read all universities\n  getUniversityList() {\n    return this.httpClient.get(`${this.baseurl}` + 'read/' + 'alluniversities');\n  }\n  // read all courses\n  getCourseList() {\n    return this.httpClient.get(`${this.baseurl}` + 'read/' + 'allcourses');\n  }\n  // read enrolled details\n  getEnrolledDetails(aadhaarNo) {\n    return this.httpClient.get(`${this.baseurl}` + 'read/' + 'enrolleddetails/' + `${aadhaarNo}`);\n  }\n  // read university courses\n  getUniversityCourseList(instituteCode) {\n    return this.httpClient.get(`${this.baseurl}` + 'read/' + 'universitycourses/' + `${instituteCode}`);\n  }\n  // filter by degree\n  filterByDegreeType(degreeType) {\n    return this.httpClient.get(`${this.baseurl}` + 'filter/university/' + `${degreeType}`);\n  }\n  // filter by degree\n  filterCourseByDegreeType(instituteCode, degreeType) {\n    return this.httpClient.get(`${this.baseurl}` + 'filter/course/' + `${instituteCode}` + \"/\" + `${degreeType}`);\n  }\n  // apply university\n  applyUniversity(instituteCode, courseCode, aadhaarNo, course) {\n    return this.httpClient.put(`${this.baseurl}` + '/apply/university/' + `${instituteCode}` + '/' + `${courseCode}` + '/' + `${aadhaarNo}`, course);\n  }\n  // delete applied university\n  deleteEnrollment(enrollId, aadhaarNo) {\n    return this.httpClient.delete(`${this.baseurl}` + '/cancel/university/' + `${enrollId}` + '/' + `${aadhaarNo}`);\n  }\n  // read university by Id\n  getUniversityById(instituteCode) {\n    return this.httpClient.get(`${this.baseurl}` + 'read/' + 'university/' + `${instituteCode}`);\n  }\n  // update student profile\n  updateProfile(aadhaarNo, student) {\n    return this.httpClient.put(`${this.baseurl}` + 'update/' + 'profile/' + `${aadhaarNo}`, student);\n  }\n  // star search\n  getStarSearch(aadhaarNo) {\n    return this.httpClient.get(`${this.baseurl}` + 'starsearch/' + `${aadhaarNo}`);\n  }\n  setUserType(isUser) {\n    this.isUserLogin.next(isUser);\n  }\n  setSideMenuView(view) {\n    this.showSideMenu.next(view);\n  }\n  setEmailId(emailId) {\n    this.emailId = emailId;\n  }\n  getUserByEmail(emailId) {\n    return this.httpClient.get(`${this.baseurl}` + 'studentlogin/' + `${emailId}`);\n  }\n  getStudentById(aadhaarNo) {\n    return this.httpClient.get(`${this.baseurl}` + 'studentprofile/' + `${aadhaarNo}`);\n  }\n  isloggedIn() {\n    return !!this.cookie.get('aadhaarNo');\n  }\n}\nStudentserviceService.ɵfac = function StudentserviceService_Factory(t) {\n  return new (t || StudentserviceService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.CookieService));\n};\nStudentserviceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StudentserviceService,\n  factory: StudentserviceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["BehaviorSubject","StudentserviceService","constructor","httpClient","cookie","addStudent","student","post","baseurl","getUniversityList","get","getCourseList","getEnrolledDetails","aadhaarNo","getUniversityCourseList","instituteCode","filterByDegreeType","degreeType","filterCourseByDegreeType","applyUniversity","courseCode","course","put","deleteEnrollment","enrollId","delete","getUniversityById","updateProfile","getStarSearch","setUserType","isUser","isUserLogin","next","setSideMenuView","view","showSideMenu","setEmailId","emailId","getUserByEmail","getStudentById","isloggedIn","factory","providedIn"],"sourceRoot":"","sources":["D:\\MadeshV-1626\\Angular workspace\\studyabroad\\src\\app\\service\\studentservice.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Course, DegreeType } from '../Course';\r\nimport { Enroll } from '../Enroll';\r\nimport { Student } from '../Student';\r\nimport { University } from '../University';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StudentserviceService {\r\n\r\n  instituteCode!:number;\r\n  aadhaarNo!:number;\r\n  courseCode!:number;\r\n\r\n  emailId!:any;\r\n  isUserLogin = new BehaviorSubject<boolean>(true);\r\n  showSideMenu = new BehaviorSubject<boolean>(false);\r\n\r\n  private baseurl = 'http://localhost:8080/student/';\r\n\r\n\r\n  constructor(private httpClient : HttpClient, private cookie:CookieService) { }\r\n\r\n  // create student\r\n  addStudent(student:Student):Observable<Object>{\r\n    return this.httpClient.post(`${this.baseurl}` + 'create',student);\r\n  }\r\n\r\n  // read all universities\r\n  getUniversityList(): Observable<University[]>{\r\n    return this.httpClient.get<University[]>(`${this.baseurl}` +'read/'+'alluniversities');\r\n  }\r\n\r\n  // read all courses\r\n  getCourseList(): Observable<Course[]>{\r\n    return this.httpClient.get<Course[]>(`${this.baseurl}` +'read/'+'allcourses');\r\n  }\r\n\r\n  // read enrolled details\r\n  getEnrolledDetails(aadhaarNo:Number): Observable<Enroll[]>{\r\n    return this.httpClient.get<Enroll[]>(`${this.baseurl}` +'read/'+'enrolleddetails/'+`${aadhaarNo}`);\r\n  }\r\n\r\n  // read university courses\r\n  getUniversityCourseList(instituteCode:Number):Observable<Course[]>{\r\n    return this.httpClient.get<Course[]>(`${this.baseurl}` +'read/'+'universitycourses/'+`${instituteCode}`);\r\n  }\r\n\r\n  // filter by degree\r\n  filterByDegreeType(degreeType:DegreeType):Observable<University[]>{\r\n    return this.httpClient.get<University[]>(`${this.baseurl}`+'filter/university/'+`${degreeType}`);\r\n  }\r\n\r\n    // filter by degree\r\n    filterCourseByDegreeType(instituteCode:Number,degreeType:DegreeType):Observable<Course[]>{\r\n      return this.httpClient.get<Course[]>(`${this.baseurl}`+'filter/course/'+`${instituteCode}`+\"/\"+`${degreeType}`);\r\n    }\r\n\r\n  // apply university\r\n  applyUniversity(instituteCode:Number,courseCode:Number,aadhaarNo:Number,course:Course):Observable<Object>{\r\n    return this.httpClient.put<Object>(`${this.baseurl}`+'/apply/university/'+`${instituteCode}`+'/'+`${courseCode}`+'/'+`${aadhaarNo}`,course);\r\n  }\r\n\r\n  // delete applied university\r\n  deleteEnrollment(enrollId:Number,aadhaarNo:Number):Observable<Object>{\r\n    return this.httpClient.delete<Object>(`${this.baseurl}`+'/cancel/university/'+`${enrollId}`+'/'+`${aadhaarNo}`);\r\n  }\r\n\r\n  \r\n  // read university by Id\r\n  getUniversityById(instituteCode:Number):Observable<University>{\r\n    return this.httpClient.get<University>(`${this.baseurl}` +'read/'+'university/'+`${instituteCode}`);\r\n  }\r\n  \r\n  // update student profile\r\n  updateProfile(aadhaarNo:Number,student:Student):Observable<Object>{\r\n    return this.httpClient.put<Object>(`${this.baseurl}`+'update/'+'profile/'+`${aadhaarNo}`,student);\r\n  }\r\n\r\n  // star search\r\n  getStarSearch(aadhaarNo:Number): Observable<University[]>{\r\n    return this.httpClient.get<University[]>(`${this.baseurl}` +'starsearch/'+`${aadhaarNo}`);\r\n  }\r\n\r\n\r\n\r\n  public setUserType(isUser: boolean) {\r\n    this.isUserLogin.next(isUser);\r\n  }\r\n\r\n  public setSideMenuView(view: boolean) {\r\n    this.showSideMenu.next(view);\r\n  }\r\n\r\n\r\n setEmailId(emailId: string){\r\n  this.emailId=emailId;\r\n }\r\n  getUserByEmail(emailId: string): Observable<Student>{\r\n    return this.httpClient.get<Student>(`${this.baseurl}`+'studentlogin/'+`${emailId}`);\r\n  }\r\n\r\n  getStudentById(aadhaarNo: Number): Observable<Student>{\r\n    return this.httpClient.get<Student>(`${this.baseurl}`+'studentprofile/'+`${aadhaarNo}`);\r\n  }\r\n\r\n  isloggedIn(){\r\n    return !!this.cookie.get('aadhaarNo');  \r\n   }\r\n  \r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}