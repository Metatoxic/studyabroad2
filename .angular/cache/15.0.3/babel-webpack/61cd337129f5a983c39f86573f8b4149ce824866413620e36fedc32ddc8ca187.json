{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class StudentserviceService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.isUserLogin = new BehaviorSubject(true);\n    this.showSideMenu = new BehaviorSubject(false);\n    this.baseurl = 'http://localhost:8080/student/';\n  }\n  // create student\n  addStudent(student) {\n    return this.httpClient.post(`${this.baseurl}` + 'create', student);\n  }\n  // read all universities\n  getUniversityList() {\n    return this.httpClient.get(`${this.baseurl}` + 'read/' + 'alluniversities');\n  }\n  // read all courses\n  getCourseList() {\n    return this.httpClient.get(`${this.baseurl}` + 'read/' + 'allcourses');\n  }\n  // read university courses\n  getUniversityCourseList(instituteCode) {\n    return this.httpClient.get(`${this.baseurl}` + 'read/' + 'universitycourses/' + `${instituteCode}`);\n  }\n  // filter by degree\n  filterByDegreeType(degreeType) {\n    return this.httpClient.get(`${this.baseurl}` + 'filter/university/' + `${degreeType}`);\n  }\n  // filter by degree\n  filterCourseByDegreeType(instituteCode, degreeType) {\n    return this.httpClient.get(`${this.baseurl}` + 'filter/course/' + `${instituteCode}` + \"/\" + `${degreeType}`);\n  }\n  // apply university\n  applyUniversity(instituteCode, courseCode, aadhaarNo, course) {\n    return this.httpClient.put(`${this.baseurl}` + '/apply/university/' + `${instituteCode}` + '/' + `${courseCode}` + '/' + `${aadhaarNo}`, course);\n  }\n  // read university by Id\n  // getUniversityById(instituteCode:Number):Observable<University>{\n  //   return this.httpClient.get<University>(`${this.baseurl}` +'read/'+'university/'+`${instituteCode}`);\n  // }\n  setUserType(isUser) {\n    this.isUserLogin.next(isUser);\n  }\n  setSideMenuView(view) {\n    this.showSideMenu.next(view);\n  }\n  setEmailId(emailId) {\n    this.emailId = emailId;\n  }\n  getUserByEmail(emailId) {\n    return this.httpClient.get(`${this.baseurl}` + 'studentlogin/' + `${emailId}`);\n  }\n  getStudentById(aadhaarNo) {\n    return this.httpClient.get(`${this.baseurl}` + 'studentprofile/' + `${aadhaarNo}`);\n  }\n}\nStudentserviceService.ɵfac = function StudentserviceService_Factory(t) {\n  return new (t || StudentserviceService)(i0.ɵɵinject(i1.HttpClient));\n};\nStudentserviceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StudentserviceService,\n  factory: StudentserviceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,eAAe,QAAoB,MAAM;;;AAQlD,OAAM,MAAOC,qBAAqB;EAahCC,YAAoBC,UAAuB;IAAvB,eAAU,GAAVA,UAAU;IAN9B,gBAAW,GAAG,IAAIH,eAAe,CAAU,IAAI,CAAC;IAChD,iBAAY,GAAG,IAAIA,eAAe,CAAU,KAAK,CAAC;IAE1C,YAAO,GAAG,gCAAgC;EAGH;EAE/C;EACAI,UAAU,CAACC,OAAe;IACxB,OAAO,IAAI,CAACF,UAAU,CAACG,IAAI,CAAC,GAAG,IAAI,CAACC,OAAO,EAAE,GAAG,QAAQ,EAACF,OAAO,CAAC;EACnE;EAEA;EACAG,iBAAiB;IACf,OAAO,IAAI,CAACL,UAAU,CAACM,GAAG,CAAe,GAAG,IAAI,CAACF,OAAO,EAAE,GAAE,OAAO,GAAC,iBAAiB,CAAC;EACxF;EAEA;EACAG,aAAa;IACX,OAAO,IAAI,CAACP,UAAU,CAACM,GAAG,CAAW,GAAG,IAAI,CAACF,OAAO,EAAE,GAAE,OAAO,GAAC,YAAY,CAAC;EAC/E;EAEA;EACAI,uBAAuB,CAACC,aAAoB;IAC1C,OAAO,IAAI,CAACT,UAAU,CAACM,GAAG,CAAW,GAAG,IAAI,CAACF,OAAO,EAAE,GAAE,OAAO,GAAC,oBAAoB,GAAC,GAAGK,aAAa,EAAE,CAAC;EAC1G;EAEA;EACAC,kBAAkB,CAACC,UAAqB;IACtC,OAAO,IAAI,CAACX,UAAU,CAACM,GAAG,CAAe,GAAG,IAAI,CAACF,OAAO,EAAE,GAAC,oBAAoB,GAAC,GAAGO,UAAU,EAAE,CAAC;EAClG;EAEE;EACAC,wBAAwB,CAACH,aAAoB,EAACE,UAAqB;IACjE,OAAO,IAAI,CAACX,UAAU,CAACM,GAAG,CAAW,GAAG,IAAI,CAACF,OAAO,EAAE,GAAC,gBAAgB,GAAC,GAAGK,aAAa,EAAE,GAAC,GAAG,GAAC,GAAGE,UAAU,EAAE,CAAC;EACjH;EAEF;EACAE,eAAe,CAACJ,aAAoB,EAACK,UAAiB,EAACC,SAAgB,EAACC,MAAa;IACnF,OAAO,IAAI,CAAChB,UAAU,CAACiB,GAAG,CAAS,GAAG,IAAI,CAACb,OAAO,EAAE,GAAC,oBAAoB,GAAC,GAAGK,aAAa,EAAE,GAAC,GAAG,GAAC,GAAGK,UAAU,EAAE,GAAC,GAAG,GAAC,GAAGC,SAAS,EAAE,EAACC,MAAM,CAAC;EAC7I;EAGA;EACA;EACA;EACA;EAGOE,WAAW,CAACC,MAAe;IAChC,IAAI,CAACC,WAAW,CAACC,IAAI,CAACF,MAAM,CAAC;EAC/B;EAEOG,eAAe,CAACC,IAAa;IAClC,IAAI,CAACC,YAAY,CAACH,IAAI,CAACE,IAAI,CAAC;EAC9B;EAGDE,UAAU,CAACC,OAAe;IACzB,IAAI,CAACA,OAAO,GAACA,OAAO;EACrB;EACCC,cAAc,CAACD,OAAe;IAC5B,OAAO,IAAI,CAAC1B,UAAU,CAACM,GAAG,CAAU,GAAG,IAAI,CAACF,OAAO,EAAE,GAAC,eAAe,GAAC,GAAGsB,OAAO,EAAE,CAAC;EACrF;EAEAE,cAAc,CAACb,SAAiB;IAC9B,OAAO,IAAI,CAACf,UAAU,CAACM,GAAG,CAAU,GAAG,IAAI,CAACF,OAAO,EAAE,GAAC,iBAAiB,GAAC,GAAGW,SAAS,EAAE,CAAC;EACzF;;AA3EWjB,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;SAArBA,qBAAqB;EAAA+B,SAArB/B,qBAAqB;EAAAgC,YAFpB;AAAM","names":["BehaviorSubject","StudentserviceService","constructor","httpClient","addStudent","student","post","baseurl","getUniversityList","get","getCourseList","getUniversityCourseList","instituteCode","filterByDegreeType","degreeType","filterCourseByDegreeType","applyUniversity","courseCode","aadhaarNo","course","put","setUserType","isUser","isUserLogin","next","setSideMenuView","view","showSideMenu","setEmailId","emailId","getUserByEmail","getStudentById","factory","providedIn"],"sourceRoot":"","sources":["D:\\MadeshV-1626\\Angular workspace\\studyabroad\\src\\app\\service\\studentservice.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Course, DegreeType } from '../Course';\nimport { Student } from '../Student';\nimport { University } from '../University';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentserviceService {\n\n  instituteCode!:number;\n  aadhaarNo!:number;\n  courseCode!:number;\n\n  emailId!:any;\n  isUserLogin = new BehaviorSubject<boolean>(true);\n  showSideMenu = new BehaviorSubject<boolean>(false);\n\n  private baseurl = 'http://localhost:8080/student/';\n\n\n  constructor(private httpClient : HttpClient) { }\n\n  // create student\n  addStudent(student:Student):Observable<Object>{\n    return this.httpClient.post(`${this.baseurl}` + 'create',student);\n  }\n\n  // read all universities\n  getUniversityList(): Observable<University[]>{\n    return this.httpClient.get<University[]>(`${this.baseurl}` +'read/'+'alluniversities');\n  }\n\n  // read all courses\n  getCourseList(): Observable<Course[]>{\n    return this.httpClient.get<Course[]>(`${this.baseurl}` +'read/'+'allcourses');\n  }\n\n  // read university courses\n  getUniversityCourseList(instituteCode:number):Observable<Course[]>{\n    return this.httpClient.get<Course[]>(`${this.baseurl}` +'read/'+'universitycourses/'+`${instituteCode}`);\n  }\n\n  // filter by degree\n  filterByDegreeType(degreeType:DegreeType):Observable<University[]>{\n    return this.httpClient.get<University[]>(`${this.baseurl}`+'filter/university/'+`${degreeType}`);\n  }\n\n    // filter by degree\n    filterCourseByDegreeType(instituteCode:Number,degreeType:DegreeType):Observable<Course[]>{\n      return this.httpClient.get<Course[]>(`${this.baseurl}`+'filter/course/'+`${instituteCode}`+\"/\"+`${degreeType}`);\n    }\n\n  // apply university\n  applyUniversity(instituteCode:number,courseCode:Number,aadhaarNo:number,course:Course):Observable<Object>{\n    return this.httpClient.put<Object>(`${this.baseurl}`+'/apply/university/'+`${instituteCode}`+'/'+`${courseCode}`+'/'+`${aadhaarNo}`,course);\n  }\n\n  \n  // read university by Id\n  // getUniversityById(instituteCode:Number):Observable<University>{\n  //   return this.httpClient.get<University>(`${this.baseurl}` +'read/'+'university/'+`${instituteCode}`);\n  // }\n  \n\n  public setUserType(isUser: boolean) {\n    this.isUserLogin.next(isUser);\n  }\n\n  public setSideMenuView(view: boolean) {\n    this.showSideMenu.next(view);\n  }\n\n\n setEmailId(emailId: string){\n  this.emailId=emailId;\n }\n  getUserByEmail(emailId: string): Observable<Student>{\n    return this.httpClient.get<Student>(`${this.baseurl}`+'studentlogin/'+`${emailId}`);\n  }\n\n  getStudentById(aadhaarNo: number): Observable<Student>{\n    return this.httpClient.get<Student>(`${this.baseurl}`+'studentprofile/'+`${aadhaarNo}`);\n  }\n\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}